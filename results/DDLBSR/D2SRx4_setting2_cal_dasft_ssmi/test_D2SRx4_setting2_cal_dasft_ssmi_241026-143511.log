24-10-26 14:35:11.026 - INFO:   name: D2SRx4_setting2_cal_dasft_ssmi
  suffix: None
  model: blind
  distortion: sr
  scale: 4
  ksize: 31
  crop_border: None
  gpu_ids: [2]
  pca_matrix_path: ../../../pca_matrix/DCLS/pca_aniso_matrix_x4.pth
  datasets:[
    test0:[
      name: Set5
      mode: LQGT
      dataroot_GT: /data/wangjia/BSR/test/Setting2/Set5/HR/x4
      dataroot_LQ: /data/wangjia/BSR/test/Setting2/Set5/LRblur/x4
      phase: test0
      scale: 4
      data_type: img
    ]
  ]
  network_G:[
    which_model_G: D2SR_s3
    setting:[
      scale: 4
      ksize: 31
    ]
  ]
  path:[
    pretrain_model_G: /userHome/guest/wangjia/blindsr/DDL-BSR/pretrained_model/D2SR-x4-0905.pth
    root: /userHome/guest/wangjia/blindsr/DDL-BSR
    results_root: /userHome/guest/wangjia/blindsr/DDL-BSR/results/DDLBSR/D2SRx4_setting2_cal_dasft_ssmi
    log: /userHome/guest/wangjia/blindsr/DDL-BSR/results/DDLBSR/D2SRx4_setting2_cal_dasft_ssmi
  ]
  is_train: False

24-10-26 14:35:11.029 - INFO: Dataset [LQGTDataset - Set5] is created.
24-10-26 14:35:11.029 - INFO: Number of test images in [Set5]: 5
24-10-26 14:35:13.294 - INFO: Network G structure: DataParallel - D2SR_s3, with parameters: 18,046,808
24-10-26 14:35:13.294 - INFO: D2SR_s3(
  (fea_extra): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  (dpnet): Encoder(
    (encoder): Sequential(
      (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU(inplace=True)
      (4): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU(inplace=True)
      (6): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (7): ReLU(inplace=True)
      (8): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (9): ReLU(inplace=True)
      (10): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (11): ReLU(inplace=True)
      (12): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (13): ReLU(inplace=True)
    )
  )
  (bottle): Sequential(
    (0): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (1): LeakyReLU(negative_slope=0.1, inplace=True)
    (2): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (3): LeakyReLU(negative_slope=0.1, inplace=True)
    (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (5): LeakyReLU(negative_slope=0.1, inplace=True)
    (6): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (ddlnet): DDLNet(
    (conv_head): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (blocks): Sequential(
      (0): CascadeResBlock(
        (f): Sequential(
          (0): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
          (1): ReLU(inplace=True)
          (2): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
        )
      )
      (1): CascadeResBlock(
        (f): Sequential(
          (0): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
          (1): ReLU(inplace=True)
          (2): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
        )
      )
      (2): CascadeResBlock(
        (f): Sequential(
          (0): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
          (1): ReLU(inplace=True)
          (2): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
        )
      )
      (3): CascadeResBlock(
        (f): Sequential(
          (0): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
          (1): ReLU(inplace=True)
          (2): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
        )
      )
      (4): CascadeResBlock(
        (f): Sequential(
          (0): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
          (1): ReLU(inplace=True)
          (2): ResBlock(
            (f): Sequential(
              (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (1): ReLU(inplace=True)
              (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (3): ReLU(inplace=True)
            )
          )
        )
      )
    )
    (conv_tail): Conv2d(64, 961, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (conv_tail2): Conv2d(961, 961, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (softmax): Softmax(dim=1)
  )
  (c_conv): CorrectKernelBlock(
    (f): Sequential(
      (0): Conv2d(961, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): ReLU(inplace=True)
      (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (3): ReLU(inplace=True)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): ReLU(inplace=True)
    )
  )
  (G): SR(
    (conv1): Conv2d(3, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (body): Sequential(
      (0): FUSION(
        (body): Sequential(
          (0): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (1): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (2): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (3): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (4): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (1): FUSION(
        (body): Sequential(
          (0): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (1): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (2): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (3): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (4): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (2): FUSION(
        (body): Sequential(
          (0): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (1): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (2): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (3): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (4): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (3): FUSION(
        (body): Sequential(
          (0): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (1): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (2): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (3): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (4): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
      (4): FUSION(
        (body): Sequential(
          (0): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (1): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (2): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (3): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
          (4): Gather(
            (dab): KOALAModlule(
              (conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU(inplace=True)
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (3): ReLU(inplace=True)
              )
              (mult_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              )
              (loc_filter_conv): Sequential(
                (0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (1): ReLU()
                (2): Conv2d(64, 49, kernel_size=(1, 1), stride=(1, 1))
                (3): KernelNormalize()
              )
              (local_conv): LocalConvFeat(
                (image_patches): ExtractSplitStackImagePatches()
              )
            )
            (caamb): CAAMB(
              (daam1): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (daam2): CAAMSFT(
                (SFT_scale_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_scale_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv0): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
                (SFT_shift_conv1): Conv2d(64, 64, kernel_size=(1, 1), stride=(1, 1))
              )
              (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (relu): ReLU(inplace=True)
            )
          )
        )
        (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      )
    )
    (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (tail): Sequential(
      (0): Upsampler(
        (0): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): PixelShuffle(upscale_factor=2)
        (2): Conv2d(64, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): PixelShuffle(upscale_factor=2)
      )
      (1): Conv2d(64, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (linear): Linear(in_features=961, out_features=31, bias=True)
  (linear2): Linear(in_features=31, out_features=4, bias=True)
  (relu): ReLU(inplace=True)
)
24-10-26 14:35:13.295 - INFO: Loading model for G [/userHome/guest/wangjia/blindsr/DDL-BSR/pretrained_model/D2SR-x4-0905.pth] ...
24-10-26 14:35:13.703 - INFO: Model [B_Model] is created.
24-10-26 14:35:13.703 - INFO: 
Testing [Set5]...
24-10-26 14:35:14.986 - INFO: img:/data/wangjia/BSR/test/Setting2/Set5/HR/x4/sigbaby.png - PSNR: 31.062753 dB; SSIM: 0.838535; PSNR_Y: 32.611745 dB; SSIM_Y: 0.870594.
24-10-26 14:35:15.295 - INFO: img:/data/wangjia/BSR/test/Setting2/Set5/HR/x4/sigbird.png - PSNR: 31.413779 dB; SSIM: 0.901654; PSNR_Y: 33.615958 dB; SSIM_Y: 0.925799.
24-10-26 14:35:15.481 - INFO: img:/data/wangjia/BSR/test/Setting2/Set5/HR/x4/sigbutterfly.png - PSNR: 24.834709 dB; SSIM: 0.854036; PSNR_Y: 26.202934 dB; SSIM_Y: 0.880645.
24-10-26 14:35:15.752 - INFO: img:/data/wangjia/BSR/test/Setting2/Set5/HR/x4/sighead.png - PSNR: 28.823717 dB; SSIM: 0.663110; PSNR_Y: 31.592407 dB; SSIM_Y: 0.746201.
24-10-26 14:35:15.969 - INFO: img:/data/wangjia/BSR/test/Setting2/Set5/HR/x4/sigwoman.png - PSNR: 27.572321 dB; SSIM: 0.875401; PSNR_Y: 28.987160 dB; SSIM_Y: 0.892101.
24-10-26 14:35:15.969 - INFO: ----Average PSNR/SSIM results for Set5----
	PSNR: 28.741456 dB; SSIM: 0.826547

24-10-26 14:35:15.970 - INFO: ----Y channel, average PSNR/SSIM----
	PSNR_Y: 30.602041 dB; SSIM_Y: 0.863068

24-10-26 14:35:15.970 - INFO: average test time: 0.1817
